---
import * as interfaces from '../../lib/interfaces.ts'
import { buildHeadingId } from '../../lib/blog-helpers.ts'
import { snakeToKebab } from '../../lib/style-helpers.ts'
import '../../styles/notion-color.css'

export interface Props {
  block: interfaces.Block
  headings: interfaces.Block[]
}

const { block, headings } = Astro.props
---
<div class="flex">
<div class="table-of-contents border-black rounded-xl border p-2 mx-4 py-4">
  {
    headings.map((headingBlock: interfaces.Block) => {
      const heading =
        headingBlock.Heading1 || headingBlock.Heading2 || headingBlock.Heading3

      let indentClass = ''
      if (headingBlock.Type === 'heading_1') {
        indentClass = "my-2 p-2 font-bold text-lg text-primary underline underline-offset-8"
      } else if (headingBlock.Type === 'heading_2') {
        indentClass = "my-1 p-2 indent-4 font-semibold text-base text-secondary underline underline-offset-4"
      } else if (headingBlock.Type === 'heading_3') {
        indentClass = "my-1 p-1 indent-8 font-meidium text-sm text-tertiary"
      }

      return (
        <a
          href={`#${buildHeadingId(heading)}`}
          class={`table-of-contents block rounded-full hover:bg-container2 active:bg-container hover:outline ${snakeToKebab(
            block.TableOfContents.Color
          )} ${indentClass} `}
        >
          {heading.RichTexts.map(
            (richText: interfaces.RichText) => richText.PlainText
          ).join('')}
        </a>
      )
    })
  }
</div>
</div>
