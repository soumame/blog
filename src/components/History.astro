---
import {SHEET_API_KEY, SHEET_ID} from '../server-constants'
const { sheet } = Astro.props;

// APIからデータを取得するところ。ピポピポ。
const response = await fetch(`https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${sheet}/?key=${SHEET_API_KEY}`);
const data = await response.json();
const sheetData = data.values;
---
<meta charset="UTF-8">
<div class="border-b-4 border-x-4 rounded-b-xl p-4">
{
    sheetData.map((item, index) => ( // 複数のレスポンスをループで回す！最高かよ　<h2>{index+1}</h2>
    // ここから下がレスポンスの表示の仕方。HTMLと同じように書けるので、わりと簡単にできる。item0,1,2,3,4,5,6,7はそれぞれ、スプレッドシートのA,B,C,D,E,F,G,H列に対応している。
    //0-いつ,1-どこで,2-何を(タイトル),3-どのように(概要),4-リンク,5-色class取得,6-色選択(これは取得してない),7-タグ
    <div class="flex relative border-red border-l-4 mx-2">
        <div class={`absolute flex -left-2.5 mt-5 w-5 h-5 rounded-lg ${item[5]} border`}/>
        <div class={`relative bg-gray-300 border-2 w-full md:w-1/2 rounded-xl md:rounded-r-none md:rounded-l-xl p-4 my-5 ml-4`} key={index}>
            <div class="flex">
                <time class="text-black text-lg">{item[0]}</time>
                <p class={`${item[5]} px-3 mx-3 rounded-xl text-black`}>{item[7]}</p>
            </div>
            <div class="text-gray-700">
                <p class="">
                    {item[1]}    
                </p>
            </div>
            <h1 class="text-2xl font-bold">{item[2]}&nbsp;&rarr;</p>
            <p class="mt-4 md:mt-0 text-gray-800 md:hidden">{item[3]}</p>
            <a class="absolute top-0 left-0 w-[100%] h-[100%]  
            " href={item[4]}/>   
        </div>
        <p class="my-5 p-4 hidden md:block w-1/2 border-r-2 border-y-2 rounded-r-xl text-gray-700">{item[3]}</p>

    </div>
    ))
}
</div>