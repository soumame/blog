---
import { getPageLink } from '../lib/blog-helpers.ts'

export interface Props {
  currentPage: number
  numberOfPages: number
  tag: string
}

const { currentPage, numberOfPages, tag = '' } = Astro.props

const isFirstPage = currentPage === 1
const isLastPage = currentPage === numberOfPages

const startPage = currentPage - 2 < 1 ? 1 : currentPage - 2
const endPage =
  currentPage + 2 > numberOfPages ? numberOfPages : currentPage + 2

let pages = []
for (let i = startPage; i <= endPage; i++) {
  pages.push(i)
}
---

<div class="pagination mt-4 flex flex-wrap justify-self-center place-items-center">
  <a href={getPageLink(currentPage-1, tag)} class={`md:p-4 p-4 m-1 md:mx-1 mx-0.5 rounded-full bg-button border border-b-4 border-r-4 active:border-t-4 active:border-l-4 active:border-b active:border-r ${isFirstPage && 'inactive'}`}>&lt;&lt;</a>
  {
    pages.map((p: number) => (
      <a href={getPageLink(p, tag)} class={`md:p-4 p-4 m-1md:px-8 mx-1 rounded-full bg-button border border-b-4 border-r-4 active:border-t-4 active:border-l-4 active:border-b active:border-r ${p === currentPage && 'inactive'}`}>
        {p}
      </a>
    ))
  }
  <a href={getPageLink(numberOfPages, tag)} class={`md:p-4 p-4 m-1 md:mx-1 mx-0.5 rounded-full bg-button border border-b-4 border-r-4 active:border-t-4 active:border-l-4 active:border-b active:border-r ${isLastPage && 'inactive'}`}
    >&gt;&gt;</a
  >
  
</div>
<style>
  .pagination {

  }
  .pagination a {

    text-decoration: underline;

  }
  .pagination a:hover:not(.inactive) {
    background: #ddd;
  }
  .pagination a.inactive {
    color: #999;
    text-decoration: none;
  }
</style>